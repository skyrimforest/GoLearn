模式分为三类：
	创建型模式
	结构型模式
	行为模式
模式包括如下部分：
	意图-简要描述问题与解决方案
	动机-进一步解释问题并说明模式如何提供解决方案
	结构-展示模式的各个部分与各个模式之间的关系

SOLID原则：
	S：单一职责原则，即-修改一个类的原因只能有一个。一个类的功能最好只有一个。
	   具体实现方法：将某类的额外行为包括在新类中。
	
	O：开闭原则，即-对扩展，类开放；对修改，类封闭。但是子类不应该对父类的问题负责。
	   具体实现方法：原有的方法不修改，添加新的接口处理新的方式。
	
	L：里氏替换原则，即-要求在不修改客户端代码时，可以将子类对象作为父类传递。即子类行为与父类兼容。
	   参数类型：匹配/更抽象；返回值：匹配或者更细化（也就是子类）。不加强前置，不削弱后置。
	   具体实现方法：比如要求文档产生只读的子类，使其save方法抛出异常；需要重新设计类层次，即让父类为只读的，子类添加save方法。
	   
	I：接口隔离原则，即-客户端不应该被强迫依赖于其不使用的方法。即尽量缩小接口的范围。
	   具体实现方法：复杂接口被拆分为粒度更小的接口。
		
	D：依赖倒置原则，即-高层次的类不应该依赖于低层次的类。都应该依赖于抽象接口。抽象接口不应依赖具体实现，而应该反过来。
	   具体实现方法：原本某类依赖于某具体实现类，改为依赖于某抽象的接口即可。
	
	
	
	
	
	